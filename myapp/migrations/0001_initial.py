# Generated by Django 5.1.6 on 2025-03-03 20:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('phone', models.CharField(max_length=20, verbose_name='phone')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='address')),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('closed', 'Closed')], default='new', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
            ],
            options={
                'verbose_name': 'lead',
                'verbose_name_plural': 'leads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField(verbose_name='appointment date')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('pending', 'Pending'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=50, verbose_name='status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_appointments', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='myapp.lead', verbose_name='lead')),
            ],
            options={
                'verbose_name': 'appointment',
                'verbose_name_plural': 'appointments',
                'ordering': ['-appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='PhoneCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('duration', models.DurationField(verbose_name='duration')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('outcome', models.CharField(choices=[('successful', 'Successful'), ('unsuccessful', 'Unsuccessful'), ('follow_up_needed', 'Follow-up Needed')], max_length=50, verbose_name='outcome')),
                ('disposition', models.CharField(blank=True, choices=[('interested', 'Interested'), ('not_interested', 'Not Interested'), ('follow_up', 'Follow Up'), ('voicemail', 'Voicemail'), ('no_answer', 'No Answer')], max_length=20, null=True, verbose_name='disposition')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_calls', to='myapp.lead', verbose_name='lead')),
                ('made_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phone_calls', to=settings.AUTH_USER_MODEL, verbose_name='made by')),
            ],
            options={
                'verbose_name': 'phone call',
                'verbose_name_plural': 'phone calls',
                'ordering': ['-date'],
            },
        ),
    ]
